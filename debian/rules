#!/usr/bin/make -f

export DH_VERBOSE=1
export DEB_BUILD_HARDENING=1

PACKAGE:=mysql-cluster-7.2

TMP:=$(CURDIR)/debian/tmp/

ARCH := $(shell dpkg-architecture -qDEB_BUILD_ARCH)
ARCH_OS := $(shell dpkg-architecture -qDEB_BUILD_ARCH_OS)
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEBVERSION := $(shell dpkg-parsechangelog | awk '/^Version: / { print $$2 }' | sed 's/^.*-//' )

ifneq ($(findstring ccache,$(DEB_BUILD_OPTIONS)),)
	export MYSQL_BUILD_PATH:=/usr/lib/ccache/:/bin:/usr/bin
endif

export MYSQL_BUILD_CC:=$(DEB_HOST_GNU_TYPE)-gcc
export MYSQL_BUILD_CXX:=$(DEB_HOST_GNU_TYPE)-g++

DEB_SOURCE_PACKAGE ?= $(strip $(shell egrep '^Source: ' debian/control | cut -f 2 -d ':'))
DEB_VERSION ?= $(shell dpkg-parsechangelog | egrep '^Version:' | cut -f 2 -d ' ')
DEB_NOEPOCH_VERSION ?= $(shell echo $(DEB_VERSION) | cut -d: -f2-)
DEB_UPSTREAM_VERSION ?= $(shell echo $(DEB_NOEPOCH_VERSION) | sed 's/-[^-]*$$//')
DEB_UPSTREAM_VERSION_MAJOR_MINOR := $(shell echo $(DEB_UPSTREAM_VERSION) | sed -r -n 's/^([0-9]+\.[0-9]+).*/\1/p')
DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)

EXPORTED_SOURCE_TARBALL := debian/mysql-cluster-source-7.2.tar.gz

DISTRIBUTION := $(shell lsb_release -i -s)

MAKE_TEST_TARGET:=test-force
ifneq ($(findstring fulltest,$(DEB_BUILD_OPTIONS)),)
# make test-bt is the testsuite run by the MySQL build team 
# before a release, but it is long
    MAKE_TEST_TARGET:=test-bt
endif
ifeq ($(ARCH_OS),hurd)
# Tests not fully working under Hurd
# See http://bugs.mysql.com/bug.php?id=64685
    MAKE_TEST_TARGET:=test
endif

ifneq (,$(filter $(ARCH), amd64 i386))
    TESTSUITE_FAIL_CMD:=exit 1
else
    TESTSUITE_FAIL_CMD:=true
endif

BUILDDIR := builddir
BUILDDIR_PIC := builddir-pic
builddir = $(if $(findstring -pic,$@),$(BUILDDIR_PIC),$(BUILDDIR))

# This causes seg11 crashes if LDAP is used for groups in /etc/nsswitch.conf
# so it is disabled by default although, according to MySQL, it brings >10%
# performance gain if enabled. See #299382.
ifeq ($(STATIC_MYSQLD), 1)
    USE_STATIC_MYSQLD:=WITH_MYSQLD_LDFLAGS=-all-static
endif

# See http://blogs.innodb.com/wp/2010/04/innodb-performance-aio-linux/
# Also #659565
ifneq (,$(findstring linux-gnu,$(DEB_HOST_GNU_TYPE)))
    USE_LINUX_NATIVE_AIO:=-DLINUX_NATIVE_AIO=ON
endif

override_dh_auto_clean:
	@echo "RULES.$@"
	@echo " MYSQL_BUILD_CC = $(MYSQL_BUILD_CC) "
	@echo " MYSQL_BUILD_CXX = $(MYSQL_BUILD_CXX) "
	dh_testdir 
	dh_testroot
	[ ! -d mysql-test/var ] || rm -rf mysql-test/var
	rm -rf $(BUILDDIR) $(BUILDDIR_PIC)
	#debconf-updatepo
	rm -f $(EXPORTED_SOURCE_TARBALL)

override_dh_prep:

override_dh_auto_configure: configure-stamp configure-pic-stamp

configure-pic-stamp: FORCE_FPIC_CFLAGS=-fPIC
configure-pic-stamp: FORCE_FPIC=-DWITH_PIC=On

configure-stamp configure-pic-stamp:
	@echo "RULES.$@"
	dh_testdir
	( test -d $(builddir) || mkdir $(builddir) ) && cd $(builddir) && \
	sh -c  'PATH=$${MYSQL_BUILD_PATH:-"/bin:/usr/bin"} \
	    	CC=$${MYSQL_BUILD_CC:-gcc} \
		CFLAGS=$${MYSQL_BUILD_CFLAGS:-"-O2 -DBIG_JOINS=1 ${FORCE_FPIC_CFLAGS} -fno-strict-aliasing"} \
	    	CXX=$${MYSQL_BUILD_CXX:-g++} \
	    	CXXFLAGS=$${MYSQL_BUILD_CXXFLAGS:-"-O3 -DBIG_JOINS=1 -felide-constructors -fno-exceptions -fno-rtti ${FORCE_FPIC_CFLAGS} -fno-strict-aliasing"} \
	    cmake \
	        -DINSTALL_LAYOUT=RPM \
	        -DCMAKE_VERBOSE_MAKEFILE=ON \
	        -DCMAKE_INSTALL_PREFIX=/usr \
	        -DINSTALL_LIBDIR=lib/$(DEB_HOST_MULTIARCH) \
	        -DINSTALL_PLUGINDIR=lib/$(DEB_HOST_MULTIARCH)/mysql/plugin \
		-DMYSQL_DATADIR=/var/lib/mysql \
		-DINSTALL_INFODIR=/usr/share/info \
		-DINSTALL_MANDIR=/usr/share/man \
		\
		-DCOMPILATION_COMMENT="($(DISTRIBUTION))" \
		-DMYSQL_SERVER_SUFFIX="-$(DEBVERSION)" \
	        -DSYSTEM_TYPE="debian-linux-gnu" \
		\
		-DDISABLE_SHARED=Off \
		\
		-DTHREAD_SAFE_CLIENT=On \
		-DENABLED_LOCAL_INFILE=On \
		$(FORCE_FPIC) \
		-DWITH_FAST_MUTEXES=On \
	        -DBIG_TABLES=On \
		-DMYSQL_UNIX_ADDR=/run/mysqld/mysqld.sock \
	       	-DMYSQL_USER=mysql \
		-DWITH_LIBWRAP=ON \
		-DWITH_READLINE=OFF \
		$(USE_STATIC_MYSQLD) \
		-DWITH_SSL=bundled \
		-DWITH_EXTRA_CHARSETS=all \
		-DWITH_MAX=ON \
		\
		-DHAVE_NDB_SCI=OFF \
		-DWITH_NDB_TEST=OFF \
		-DWITH_NDBMTD=ON \
		\
		-DWITH_BUNDLED_MEMCACHED=OFF \
		\
		-DWITH_EMBEDDED_SERVER=ON \
		-DHAVE_EMBEDDED_PRIVILEGE_CONTROL=ON \
		    ..'
	
	touch $@


override_dh_auto_build: build-stamp build-pic-stamp

build-stamp:
	@echo "RULES.$@"
	[ -f $(EXPORTED_SOURCE_TARBALL) ] || tar -zcf $(EXPORTED_SOURCE_TARBALL) \
	--exclude=debian . \
	--transform="s,^\./,mysql-cluster-7.2/,"
	cd $(builddir) && $(MAKE)
	touch $@

build-pic-stamp:
	@echo "RULES.$@"
	cd $(builddir) && $(MAKE) -C scripts
	cd $(builddir) && $(MAKE) -C libmysqld
	touch $@

override_dh_auto_test:
	@echo "RULES.$@"
ifeq ($(findstring nocheck,$(DEB_BUILD_OPTIONS)),)
	cp unittest/unit.pl $(builddir)/unittest/
	cp -r mysql-test/* $(builddir)/mysql-test/
	cp -r sql/share/* $(builddir)/sql/share/
	cp -r scripts/*sql $(builddir)/scripts/
	cp -r storage/ndb/ndbapi-examples $(builddir)/storage/ndb/
	cd $(builddir) && $(MAKE) $(MAKE_TEST_TARGET) || $(TESTSUITE_FAIL_CMD) ;
endif

override_dh_auto_install: auto_install-stamp

auto_install-stamp:
	@echo "RULES.$@"
	dh_testdir
	dh_testroot
	dh_prep
	# some self written manpages which hopefully
	# gets overwritten sooner or later with upstreams
	mkdir -p $(TMP)/usr/share/man/man1/
	mkdir -p $(TMP)/usr/share/man/man8/
	cp debian/additions/*.1 $(TMP)/usr/share/man/man1/
	mkdir -p $(TMP)/etc/mysql/conf.d/
	touch $(TMP)/etc/mysql/conf.d/.keepme
	cp debian/additions/mysqld_safe_syslog.cnf $(TMP)/etc/mysql/conf.d/
	# make install (trailing slash needed for innobase)
	cd $(builddir) && $(MAKE) install DESTDIR=$(TMP)/
	# After installing, remove rpath to make lintian happy.
	set +e; \
	find ./debian/tmp/ -type f -print0 \
		| xargs -0 --no-run-if-empty chrpath -k 2>/dev/null \
		| fgrep RPATH= \
		| cut -d: -f 1 \
		| xargs --no-run-if-empty chrpath -d; \
	set -e

	# libmysqlclient
	# libmysqlclient_r is now a symlink to libmysqlclient. But it is
	# created wrong by the cmake build system and points at
	# libmysqlclient.so instead of the corresponding versioned lib.
	for i in `ls $(TMP)/usr/lib/$(DEB_HOST_MULTIARCH)/libmysqlclient.so*` ; do \
		rlib=`basename $$i | sed -e 's/libmysqlclient\./libmysqlclient_r./'` ;\
		ln -sf `basename $$i` $(TMP)/usr/lib/$(DEB_HOST_MULTIARCH)/$$rlib ;\
	done
	# Check if our beloved versioned symbols are really there
	# TODO 5.5 lost these when moving to cmake, they should get readded at some point
	#if [ "`objdump -T $(TMP)/usr/lib/libmysqlclient.so.18.0.0 | grep -c libmysqlclient_18`" -lt 500 ]; then \
	#  echo "ERROR: versioned symbols are absent"; \
	#  exit 1; \
	#fi

	# libmysqlclient-dev

	# libndbclient
	# Check if our beloved versioned symbols are really there
	# TODO 5.5 lost these when moving to cmake, they should get readded at some point
	#if [ "`objdump -T $(TMP)/usr/lib/libndbclient.so.6.0.0 | grep -c libndbclient_6`" -lt 500 ]; then \
	#  echo "ERROR: versioned symbols are absent"; \
	#  exit 1; \
	#fi     

	# libndbclient-dev

	# libmysqld-dev
	# install libmysqld built with -fPIC
	install -d -m 0755 -o root -g root $(TMP)/usr/lib/mysql
	install -m 0644 -o root -g root $(BUILDDIR_PIC)/libmysqld/libmysqld.a $(TMP)/usr/lib/mysql/libmysqld_pic.a
	# mysql_config won't report the -fPIC, so give libmysqld-pic users a way to get their flags
	install -m 0755 -o root -g root $(BUILDDIR_PIC)/scripts/mysql_config $(TMP)/usr/bin/mysql_config_pic

	# mysql-common

	# mysql-client
	install -m 0755 debian/additions/mysqlreport $(TMP)/usr/bin/
	install -m 0755 debian/additions/innotop/innotop $(TMP)/usr/bin/
	install -m 0644 debian/additions/innotop/innotop.1 $(TMP)/usr/share/man/man1/

	# mysql-cluster-client

	# mysql-cluster-testsuite
	mkdir -p $(TMP)/usr/lib/mysql-testsuite
	cp -rp $(TMP)/usr/share/mysql-test/* $(TMP)/usr/lib/mysql-testsuite

	# mysql-cluster-server-mgmtnode
	mkdir -p $(TMP)/usr/share/doc/mysql-cluster-server-mgmtnode-7.2/examples
	nm -n $(BUILDDIR)/storage/ndb/src/mgmsrv/ndb_mgmd | gzip -9 > $(TMP)/usr/share/doc/mysql-cluster-server-mgmtnode-7.2/ndb_mgmd.sym.gz

	# mysql-cluster-server-datanode
	mkdir -p $(TMP)/usr/share/doc/mysql-cluster-server-datanode-7.2/examples
	nm -n $(BUILDDIR)/storage/ndb/src/kernel/ndbmtd | gzip -9 > $(TMP)/usr/share/doc/mysql-cluster-server-datanode-7.2/ndbmtd.sym.gz
	nm -n $(BUILDDIR)/storage/ndb/src/kernel/ndbd | gzip -9 > $(TMP)/usr/share/doc/mysql-cluster-server-datanode-7.2/ndbd.sym.gz

	# mysql-cluster-server-sqlnode
	mkdir -p $(TMP)/usr/share/doc/mysql-cluster-server-sqlnode-7.2/examples
	mv $(TMP)/usr/share/mysql/*cnf $(TMP)/usr/share/doc/mysql-cluster-server-sqlnode-7.2/examples/
	rm -vf $(TMP)/usr/share/mysql/mi_test_all* \
	       $(TMP)/usr/share/mysql/mysql-log-rotate \
	       $(TMP)/usr/share/mysql/mysql.server \
	       $(TMP)/usr/share/mysql/binary-configure
	nm -n $(BUILDDIR)/sql/mysqld |gzip -9 > $(TMP)/usr/share/doc/mysql-cluster-server-sqlnode-7.2/mysqld.sym.gz
	install -m 0755 debian/additions/echo_stderr $(TMP)/usr/share/mysql/
	install -m 0755 debian/additions/debian-start $(TMP)/etc/mysql/
	install -m 0755 debian/additions/debian-start.inc.sh $(TMP)/usr/share/mysql/
	touch $@

override_dh_install:
	dh_movefiles
	dh_install

override_dh_installchangelogs:
	dh_installchangelogs Docs/ChangeLog

override_dh_installlogrotate-arch:
	dh_installlogrotate --name mysql-server
	if [ "$(DISTRIBUTION)" = "Ubuntu" ]; then \
	  dh_apparmor -pmysql-cluster-server-sqlnode-7.2 --profile-name=usr.sbin.mysqld; \
	fi

# Start mysql in runlevel 19 before 20 where apache, proftpd etc gets
# started which might depend on a running database server.
override_dh_installinit-arch:
	dh_installinit --name=mysql -- defaults 19 21
	dh_installinit --name=mysql-ndb -- defaults 19 21
	dh_installinit --name=mysql-ndb-mgm -- defaults 19 21

override_dh_installcron-arch:
	dh_installcron --name mysql-server

override_dh_makeshlibs-arch:
	dh_makeshlibs -plibmysqlclient18 -V'libmysqlclient18 (>= 7.2.6-0.1)'
	dh_makeshlibs -plibndbclient6 -V'libndbclient6 (>= 7.2.6-0.1)'

binary:	binary-indep binary-arch

get-orig-source:
	uscan --force-download --verbose --download-current-version

%:
	dh $@ --parallel

