Author <nicholas@periapt.co.uk>
Subject: spelling errors
 Preceeding -> preceding
Last-Update: 2012-10-24
Forwarded: no
Index: mysql-5.5-5.5.31+dfsg/libmysql/errmsg.c
===================================================================
--- mysql-5.5-5.5.31+dfsg.orig/libmysql/errmsg.c	2013-05-05 09:47:48.243181980 -0700
+++ mysql-5.5-5.5.31+dfsg/libmysql/errmsg.c	2013-05-05 09:47:48.183185478 -0700
@@ -81,7 +81,7 @@
   "Attempt to read a row while there is no result set associated with the statement",
   "This feature is not implemented yet",
   "Lost connection to MySQL server at '%s', system error: %d",
-  "Statement closed indirectly because of a preceeding %s() call",
+  "Statement closed indirectly because of a preceding %s() call",
   "The number of columns in the result set differs from the number of bound buffers. You must reset the statement, rebind the result set columns, and execute the statement again",
   "This handle is already connected. Use a separate handle for each connection.",
   "Authentication plugin '%s' cannot be loaded: %s",
Index: mysql-5.5-5.5.31+dfsg/mysql-test/extra/rpl_tests/rpl_ddl.test
===================================================================
--- mysql-5.5-5.5.31+dfsg.orig/mysql-test/extra/rpl_tests/rpl_ddl.test	2013-05-05 09:47:48.243181980 -0700
+++ mysql-5.5-5.5.31+dfsg/mysql-test/extra/rpl_tests/rpl_ddl.test	2013-05-05 09:47:48.183185478 -0700
@@ -98,8 +98,8 @@
 #       --> less switching of AUTOCOMMIT mode on master side.
 #
 #    4. Never use a test object, which was direct or indirect affected by a
-#       preceeding test sequence again.
-#       If one preceeding test sequence hits a (sometimes not visible,
+#       preceding test sequence again.
+#       If one preceding test sequence hits a (sometimes not visible,
 #       because the sql error code of the statement might be 0) bug
 #       and these rules are ignored, a following test sequence might earn ugly
 #       effects like failing 'sync_slave_with_master', crashes of the slave or
Index: mysql-5.5-5.5.31+dfsg/mysql-test/extra/rpl_tests/rpl_row_basic.test
===================================================================
--- mysql-5.5-5.5.31+dfsg.orig/mysql-test/extra/rpl_tests/rpl_row_basic.test	2013-05-05 09:47:48.243181980 -0700
+++ mysql-5.5-5.5.31+dfsg/mysql-test/extra/rpl_tests/rpl_row_basic.test	2013-05-05 09:47:48.183185478 -0700
@@ -221,7 +221,7 @@
 SELECT * FROM t7 ORDER BY C1;
 
 # since bug#31552/31609 idempotency is not default any longer. In order
-# the preceeding test INSERT INTO t7 to pass the mode is switched
+# the preceding test INSERT INTO t7 to pass the mode is switched
 # temprorarily
 set @@global.slave_exec_mode= 'IDEMPOTENT';
 
@@ -260,7 +260,7 @@
 SELECT * FROM t8 ORDER BY a;
 
 # since bug#31552/31609 idempotency is not default any longer. In order
-# the preceeding test INSERT INTO t8 to pass the mode is switched
+# the preceding test INSERT INTO t8 to pass the mode is switched
 # temprorarily
 set @@global.slave_exec_mode= 'IDEMPOTENT';
 
Index: mysql-5.5-5.5.31+dfsg/mysql-test/include/wait_until_count_sessions.inc
===================================================================
--- mysql-5.5-5.5.31+dfsg.orig/mysql-test/include/wait_until_count_sessions.inc	2013-05-05 09:47:48.243181980 -0700
+++ mysql-5.5-5.5.31+dfsg/mysql-test/include/wait_until_count_sessions.inc	2013-05-05 09:47:48.183185478 -0700
@@ -10,7 +10,7 @@
 #    1. We wait for $current_sessions <= $count_sessions because in the use case
 #       with count_sessions.inc before and wait_until_count_sessions.inc after
 #       the core of the test it could happen that the disconnects of sessions
-#       belonging to the preceeding test are not finished.
+#       belonging to the preceding test are not finished.
 #       sessions at test begin($count_sessions) =  m + n
 #       sessions of the previous test which will be soon disconnected = n (n >= 0)
 #       sessions at test end ($current sessions, assuming the test disconnects
Index: mysql-5.5-5.5.31+dfsg/mysql-test/suite/funcs_1/views/func_view.inc
===================================================================
--- mysql-5.5-5.5.31+dfsg.orig/mysql-test/suite/funcs_1/views/func_view.inc	2013-05-05 09:47:48.243181980 -0700
+++ mysql-5.5-5.5.31+dfsg/mysql-test/suite/funcs_1/views/func_view.inc	2013-05-05 09:47:48.183185478 -0700
@@ -282,7 +282,7 @@
 #               other interesting value
 #     numbers   -> 0
 #     strings, blobs, binaries -> not full length of used data type, "exotic"
-#                                 characters and preceeding and trailing spaces
+#                                 characters and preceding and trailing spaces
 #     FIXME enum, set ??
 INSERT INTO t1_values SET
        my_char_30 = ' ---äÖüß@µ*$-- ',
Index: mysql-5.5-5.5.31+dfsg/mysql-test/suite/funcs_1/views/views_master.inc
===================================================================
--- mysql-5.5-5.5.31+dfsg.orig/mysql-test/suite/funcs_1/views/views_master.inc	2013-05-05 09:47:48.243181980 -0700
+++ mysql-5.5-5.5.31+dfsg/mysql-test/suite/funcs_1/views/views_master.inc	2013-05-05 09:47:48.187185245 -0700
@@ -545,7 +545,7 @@
 #                   view names are accepted, at creation time, alteration time,
 #                   and drop time.
 ###############################################################################
-# Note(mleich): non-qualified view name means a view name without preceeding
+# Note(mleich): non-qualified view name means a view name without preceding
 #               database name
 --disable_warnings
 DROP VIEW  IF EXISTS v1 ;
Index: mysql-5.5-5.5.31+dfsg/mysql-test/suite/rpl/t/rpl_ddl.test
===================================================================
--- mysql-5.5-5.5.31+dfsg.orig/mysql-test/suite/rpl/t/rpl_ddl.test	2013-05-05 09:47:48.243181980 -0700
+++ mysql-5.5-5.5.31+dfsg/mysql-test/suite/rpl/t/rpl_ddl.test	2013-05-05 09:47:48.187185245 -0700
@@ -13,10 +13,10 @@
 #         sequences start.
 #
 #      2. Never use a test object, which was direct or indirect affected by a
-#         preceeding test sequence again.
+#         preceding test sequence again.
 #         Except table d1.t1 where ONLY DML is allowed.
 #
-#         If one preceeding test sequence hits a (sometimes not good visible,
+#         If one preceding test sequence hits a (sometimes not good visible,
 #         because the sql error code of the statement might be 0) bug
 #         and these rules are ignored, a following test sequence might earn ugly
 #         effects like failing 'sync_slave_with_master', crashes of the slave or
Index: mysql-5.5-5.5.31+dfsg/mysql-test/suite/rpl/t/rpl_row_basic_11bugs.test
===================================================================
--- mysql-5.5-5.5.31+dfsg.orig/mysql-test/suite/rpl/t/rpl_row_basic_11bugs.test	2013-05-05 09:47:48.243181980 -0700
+++ mysql-5.5-5.5.31+dfsg/mysql-test/suite/rpl/t/rpl_row_basic_11bugs.test	2013-05-05 09:47:48.187185245 -0700
@@ -239,7 +239,7 @@
 UPDATE t1 SET a = 5, b = 'slave' WHERE a = 1;
 SELECT * FROM t1 ORDER BY a;
 # since bug#31552/31609 idempotency is not default any longer. In
-# order for the preceeding test UPDATE t1 to pass, the mode is switched
+# order for the preceding test UPDATE t1 to pass, the mode is switched
 # temprorarily
 set @@global.slave_exec_mode= 'IDEMPOTENT';
 --echo **** On Master ****
Index: mysql-5.5-5.5.31+dfsg/sql/log_event.cc
===================================================================
--- mysql-5.5-5.5.31+dfsg.orig/sql/log_event.cc	2013-05-05 09:47:48.243181980 -0700
+++ mysql-5.5-5.5.31+dfsg/sql/log_event.cc	2013-05-05 09:47:48.000000000 -0700
@@ -3312,7 +3312,7 @@
     if ((error= rows_event_stmt_cleanup(const_cast<Relay_log_info*>(rli), thd)))
     {
       const_cast<Relay_log_info*>(rli)->report(ERROR_LEVEL, error,
-                  "Error in cleaning up after an event preceeding the commit; "
+                  "Error in cleaning up after an event preceding the commit; "
                   "the group log file/position: %s %s",
                   const_cast<Relay_log_info*>(rli)->group_master_log_name,
                   llstr(const_cast<Relay_log_info*>(rli)->group_master_log_pos,
Index: mysql-5.5-5.5.31+dfsg/storage/myisam/mi_rnext.c
===================================================================
--- mysql-5.5-5.5.31+dfsg.orig/storage/myisam/mi_rnext.c	2013-05-05 09:47:48.243181980 -0700
+++ mysql-5.5-5.5.31+dfsg/storage/myisam/mi_rnext.c	2013-05-05 09:47:48.219183379 -0700
@@ -64,7 +64,7 @@
       Normally SQL layer would never request "search next" if
       "search first" failed. But HANDLER may do anything.
 
-      As mi_rnext() without preceeding mi_rkey()/mi_rfirst()
+      As mi_rnext() without preceding mi_rkey()/mi_rfirst()
       equals to mi_rfirst(), we must restore original state
       as if failing mi_rfirst() was not called.
     */
